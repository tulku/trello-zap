#!/usr/bin/env python

from trello_zap import TrelloBackend
from trello_zap import TestBackend
from trello_zap import Engine

import sys
import time
import traceback

try:
    import urllib3.contrib.pyopenssl
    urllib3.contrib.pyopenssl.inject_into_urllib3()
except:
    print("urllib3 not found, probably not needed")


class TrelloZap(object):

    def __init__(self, offline):
        self.test = TestBackend()
        self.offline = offline
        if offline is False:
            self.backend = TrelloBackend()

    def compute(self):
        if self.offline is True:
            raw_materials, requests = self.test.load_data()
        else:
            raw_materials, requests = self.backend.load_data()
            self.test.save_data(raw_materials, requests)

        raw_materials.create_timeline()
        engine = Engine(raw_materials, requests)

        engine.calculate()
        orders = raw_materials.get_required_orders()
        if self.offline is True:
            self.test.inform_required_orders(orders)
            self.test.update_requests(requests)
        else:
            self.backend.inform_required_orders(orders)
            self.backend.update_requests(requests)

if __name__ == '__main__':
    offline = False
    if len(sys.argv) == 2 and sys.argv[1] == '--offline':
        offline = True
    tz = TrelloZap(offline)
    try:
        tz.compute()
    except:
        traceback.print_exc()
        print("I've catched an exception!")


# vim: set ft=python:
